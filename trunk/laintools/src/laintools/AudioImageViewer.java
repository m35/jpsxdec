/*
 * LainTools: PSX Serial Experiments Lain Hacking and Translation Tools
 * Copyright (C) 2011  Michael Sabin
 *
 * Redistribution and use of the LainTools code or any derivative works are
 * permitted provided that the following conditions are met:
 *
 *  * Redistributions may not be sold, nor may they be used in commercial
 *    or revenue-generating business activities.
 *
 *  * Redistributions that are modified from the original source must
 *    include the complete source code, including the source code for all
 *    components used by a binary built from the modified sources. However, as
 *    a special exception, the source code distributed need not include
 *    anything that is normally distributed (in either source or binary form)
 *    with the major components (compiler, kernel, and so on) of the operating
 *    system on which the executable runs, unless that component itself
 *    accompanies the executable.
 *
 *  * Redistributions must reproduce the above copyright notice, this list
 *    of conditions and the following disclaimer in the documentation and/or
 *    other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package laintools;

import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import laintools.LainDataStructures.*;


public class AudioImageViewer extends javax.swing.JFrame {

    private NodeTable _nodeTable;

    /** Creates new form AudioImageViewer */
    public AudioImageViewer(String sSlps, String sSiteA, String sSiteB) throws IOException {
        initComponents();

        _nodeTable = new NodeTable(sSlps, sSiteA, sSiteB);

        _nodeTable.print(System.out);
        
        PrintStream fos = new PrintStream("Master.txt");
        _nodeTable.toExcel(fos);
        fos.close();

        _guiNodeList.setModel(new AbstractListModel() {
            public int getSize() {
                return _nodeTable.size();
            }

            public Object getElementAt(int index) {
                return _nodeTable.get(index);
            }
        });

        _guiSiteATable.setSiteModel(_nodeTable._siteTableA);
        _guiSiteATable.setImagePanels(_guiSiteAImg1, _guiSiteAImg2);
        _guiSiteBTable.setSiteModel(_nodeTable._siteTableB);
        _guiSiteBTable.setImagePanels(_guiSiteBImg1, _guiSiteBImg2);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _guiTabs = new javax.swing.JTabbedPane();
        _guiNodeTable = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        _guiNodeList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        _guiNodeImg1 = new laintools.BufferedImagePanel();
        _guiNodeImg2 = new laintools.BufferedImagePanel();
        _guiNodeImg3 = new laintools.BufferedImagePanel();
        _guiSiteA = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        _guiApplySiteA = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        _guiSiteATable = new laintools.AudioImageViewerTable();
        _guiDumpSiteA = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        _guiSiteAImg1 = new laintools.BufferedImagePanel();
        _guiSiteAImg2 = new laintools.BufferedImagePanel();
        _guiSiteB = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        _guiApplySiteB = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        _guiSiteBTable = new laintools.AudioImageViewerTable();
        _guiDumpSiteB = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        _guiSiteBImg1 = new laintools.BufferedImagePanel();
        _guiSiteBImg2 = new laintools.BufferedImagePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        _guiNodeTable.setDividerLocation(200);

        _guiNodeList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        _guiNodeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                _guiNodeListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(_guiNodeList);

        _guiNodeTable.setLeftComponent(jScrollPane1);

        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        _guiNodeImg1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        _guiNodeImg1.setLayout(null);
        jPanel1.add(_guiNodeImg1);

        _guiNodeImg2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        _guiNodeImg2.setLayout(null);
        jPanel1.add(_guiNodeImg2);

        _guiNodeImg3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        _guiNodeImg3.setLayout(null);
        jPanel1.add(_guiNodeImg3);

        _guiNodeTable.setRightComponent(jPanel1);

        _guiTabs.addTab("Node table", _guiNodeTable);

        _guiSiteA.setResizeWeight(0.5);

        jPanel5.setLayout(new java.awt.BorderLayout());

        _guiApplySiteA.setText("Apply selection to all");
        _guiApplySiteA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _guiApplySiteAActionPerformed(evt);
            }
        });
        jPanel5.add(_guiApplySiteA, java.awt.BorderLayout.NORTH);

        _guiSiteATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(_guiSiteATable);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        _guiDumpSiteA.setText("Dump images");
        _guiDumpSiteA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _guiDumpSiteAActionPerformed(evt);
            }
        });
        jPanel5.add(_guiDumpSiteA, java.awt.BorderLayout.SOUTH);

        _guiSiteA.setLeftComponent(jPanel5);

        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        _guiSiteAImg1.setLayout(null);
        jPanel4.add(_guiSiteAImg1);

        _guiSiteAImg2.setLayout(null);
        jPanel4.add(_guiSiteAImg2);

        _guiSiteA.setRightComponent(jPanel4);

        _guiTabs.addTab("Site A table", _guiSiteA);

        _guiSiteB.setResizeWeight(0.5);

        jPanel6.setLayout(new java.awt.BorderLayout());

        _guiApplySiteB.setText("Apply selection to all");
        _guiApplySiteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _guiApplySiteBActionPerformed(evt);
            }
        });
        jPanel6.add(_guiApplySiteB, java.awt.BorderLayout.NORTH);

        _guiSiteBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(_guiSiteBTable);

        jPanel6.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        _guiDumpSiteB.setText("Dump images");
        _guiDumpSiteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _guiDumpSiteBActionPerformed(evt);
            }
        });
        jPanel6.add(_guiDumpSiteB, java.awt.BorderLayout.SOUTH);

        _guiSiteB.setLeftComponent(jPanel6);

        jPanel7.setLayout(new java.awt.GridLayout(0, 1));

        _guiSiteBImg1.setLayout(null);
        jPanel7.add(_guiSiteBImg1);

        _guiSiteBImg2.setLayout(null);
        jPanel7.add(_guiSiteBImg2);

        _guiSiteB.setRightComponent(jPanel7);

        _guiTabs.addTab("Site B table", _guiSiteB);

        getContentPane().add(_guiTabs, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _guiApplySiteAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__guiApplySiteAActionPerformed
        _guiSiteATable.copySettings();
}//GEN-LAST:event__guiApplySiteAActionPerformed

    private void _guiNodeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event__guiNodeListValueChanged
        NodeTableItem item = (NodeTableItem)_guiNodeList.getSelectedValue();
        try {
            _guiNodeImg1.setImage(item.getImage(0));
            _guiNodeImg2.setImage(item.getImage(1));
            _guiNodeImg3.setImage(item.getImage(2));
        } catch (IOException ex) {
            Logger.getLogger(AudioImageViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event__guiNodeListValueChanged

    private void _guiApplySiteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__guiApplySiteBActionPerformed
        _guiSiteBTable.copySettings();
    }//GEN-LAST:event__guiApplySiteBActionPerformed

    private void _guiDumpSiteAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__guiDumpSiteAActionPerformed
        try {
            _guiSiteATable.dump();
        } catch (IOException ex) {
            Logger.getLogger(AudioImageViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event__guiDumpSiteAActionPerformed

    private void _guiDumpSiteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__guiDumpSiteBActionPerformed
        try {
            _guiSiteBTable.dump();
        } catch (IOException ex) {
            Logger.getLogger(AudioImageViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event__guiDumpSiteBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _guiApplySiteA;
    private javax.swing.JButton _guiApplySiteB;
    private javax.swing.JButton _guiDumpSiteA;
    private javax.swing.JButton _guiDumpSiteB;
    private laintools.BufferedImagePanel _guiNodeImg1;
    private laintools.BufferedImagePanel _guiNodeImg2;
    private laintools.BufferedImagePanel _guiNodeImg3;
    private javax.swing.JList _guiNodeList;
    private javax.swing.JSplitPane _guiNodeTable;
    private javax.swing.JSplitPane _guiSiteA;
    private laintools.BufferedImagePanel _guiSiteAImg1;
    private laintools.BufferedImagePanel _guiSiteAImg2;
    private laintools.AudioImageViewerTable _guiSiteATable;
    private javax.swing.JSplitPane _guiSiteB;
    private laintools.BufferedImagePanel _guiSiteBImg1;
    private laintools.BufferedImagePanel _guiSiteBImg2;
    private laintools.AudioImageViewerTable _guiSiteBTable;
    private javax.swing.JTabbedPane _guiTabs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables




}
