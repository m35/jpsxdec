/*
 * LainTools: PSX Serial Experiments Lain Hacking and Translation Tools
 * Copyright (C) 2011  Michael Sabin
 *
 * Redistribution and use of the LainTools code or any derivative works are
 * permitted provided that the following conditions are met:
 *
 *  * Redistributions may not be sold, nor may they be used in commercial
 *    or revenue-generating business activities.
 *
 *  * Redistributions that are modified from the original source must
 *    include the complete source code, including the source code for all
 *    components used by a binary built from the modified sources. However, as
 *    a special exception, the source code distributed need not include
 *    anything that is normally distributed (in either source or binary form)
 *    with the major components (compiler, kernel, and so on) of the operating
 *    system on which the executable runs, unless that component itself
 *    accompanies the executable.
 *
 *  * Redistributions must reproduce the above copyright notice, this list
 *    of conditions and the following disclaimer in the documentation and/or
 *    other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package texter.gui;

import java.awt.Component;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import texter.models.ImageRenderOptions;

public class Options extends javax.swing.JPanel {

    private ImageRenderOptions _options;

    /** Creates new form Options */
    public Options() {
        initComponents();
        setOptions(null);
    }

    public void setOptions(ImageRenderOptions options) {
        _options = options;
        if (_options == null) {
            SpinnerModel model = new SpinnerNumberModel();
            _guiWidth.setModel(model);
            _guiHeight.setModel(model);
            _guiLineHeight.setModel(model);
            _guiPadding.setModel(model);
            _guiShiftX.setModel(model);
            _guiShiftY.setModel(model);
            _guiStartX.setModel(model);
            _guiStartY.setModel(model);
            for (Component component : getComponents()) {
                component.setEnabled(false);
            }
        } else {
            _guiWidth.setModel(_options.imageWidth);
            _guiHeight.setModel(_options.imageHeight);
            _guiLineHeight.setModel(_options.lineHeight);
            _guiPadding.setModel(_options.padding);
            _guiShiftX.setModel(_options.shiftX);
            _guiShiftY.setModel(_options.shiftY);
            _guiStartX.setModel(_options.initialX);
            _guiStartY.setModel(_options.initialY);
            for (Component component : getComponents()) {
                component.setEnabled(true);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        _guiStartX_lbl = new javax.swing.JLabel();
        _guiStartX = new javax.swing.JSpinner();
        _guiStartY_lbl = new javax.swing.JLabel();
        _guiStartY = new javax.swing.JSpinner();
        _guiShiftX_lbl = new javax.swing.JLabel();
        _guiShiftX = new javax.swing.JSpinner();
        _guiShiftY_lbl = new javax.swing.JLabel();
        _guiShiftY = new javax.swing.JSpinner();
        _guiLineHight_lbl = new javax.swing.JLabel();
        _guiLineHeight = new javax.swing.JSpinner();
        _guiPadding_lbl = new javax.swing.JLabel();
        _guiPadding = new javax.swing.JSpinner();
        _guiWidth_lbl = new javax.swing.JLabel();
        _guiWidth = new javax.swing.JSpinner();
        _guiHeight_lbl = new javax.swing.JLabel();
        _guiHeight = new javax.swing.JSpinner();

        setLayout(new java.awt.GridBagLayout());

        _guiStartX_lbl.setText("Start X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiStartX_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 3;
        add(_guiStartX, gridBagConstraints);

        _guiStartY_lbl.setText("Start Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiStartY_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 3;
        add(_guiStartY, gridBagConstraints);

        _guiShiftX_lbl.setText("Shift X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiShiftX_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 3;
        add(_guiShiftX, gridBagConstraints);

        _guiShiftY_lbl.setText("Shift Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiShiftY_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 3;
        add(_guiShiftY, gridBagConstraints);

        _guiLineHight_lbl.setText("Line Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiLineHight_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 3;
        add(_guiLineHeight, gridBagConstraints);

        _guiPadding_lbl.setText("Padding");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiPadding_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 3;
        add(_guiPadding, gridBagConstraints);

        _guiWidth_lbl.setText("Width");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiWidth_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 3;
        add(_guiWidth, gridBagConstraints);

        _guiHeight_lbl.setText("Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(_guiHeight_lbl, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 3;
        add(_guiHeight, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner _guiHeight;
    private javax.swing.JLabel _guiHeight_lbl;
    private javax.swing.JSpinner _guiLineHeight;
    private javax.swing.JLabel _guiLineHight_lbl;
    private javax.swing.JSpinner _guiPadding;
    private javax.swing.JLabel _guiPadding_lbl;
    private javax.swing.JSpinner _guiShiftX;
    private javax.swing.JLabel _guiShiftX_lbl;
    private javax.swing.JSpinner _guiShiftY;
    private javax.swing.JLabel _guiShiftY_lbl;
    private javax.swing.JSpinner _guiStartX;
    private javax.swing.JLabel _guiStartX_lbl;
    private javax.swing.JSpinner _guiStartY;
    private javax.swing.JLabel _guiStartY_lbl;
    private javax.swing.JSpinner _guiWidth;
    private javax.swing.JLabel _guiWidth_lbl;
    // End of variables declaration//GEN-END:variables

}
