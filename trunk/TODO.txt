[Key]
 *   = normal priority
 -   = normal priority sub-item
 !   = high priority
 ?   = not sure if will implement
 x   = will not implement
 //  = done
 /   = partially done
 /?/ = done?

.....................

Self contained
* Fix: Save as, Saved as, Output
* Update manual screenshots
* Add WCW to sector test
* Update LoM sector test
* Update launch4j
* Remove 'high' quality
* Print bs format in -static
* Bug when saving: leftover text in Message column
* Add About button
* Add exit button
* Add selected count on Save All Selected button
* Add /doc folder to put most stuff for release
* Find better dropdown button
* Experiment with other tree tables (need Mac)
* Create mac app bundle: need a Mac to test!
* Test Tim generation width
* double-check what the EOF and Audio-end flags mean
* MDEC to JPEG translator
* Finish Crusader
    * Crusader tests
        . only audio
        . starts near end
        . missing audio chunk
        . missing audio sectors
        . missing video sectors
        . missing video chunk
* Bug: Cmdline multi processing overwrites save.log file for each item
* Expose logger options
* Optimize AviWriter with buffers
    - Construct audio/video chunks in ram before writing
    - Write to buffered stream
* Make XA encoder
* Add unit tests to build.xml
    * Unit tests require Java 6 while jPSXdec is built with Java 5 ...
      can use 2 different Javas in ant?
* Generate javadoc and post on site
? Add LIST:INFO:ISFT to AVI
? Make tutorial on ripping a game and using jpsxdec
? Change visualization to output HTML page
? Save and load ini on every change?

General
* Code coverage/unit testing
    * Make unit tests for the various layers of decoding:
        1) Opening/identifying various disc images
      // 2) Identification of the various sector types
        3) Indexing of the various item types
      /  1) Uncompression of various bitstreams
      /  2) Various ways to decode MDEC streams
* Translate/localize the GUI and CL text
* Replace all logging to use proper logging syntax
* Mac test
* Clean up all the TODOs
// import cleanup
* write code documentation
? Run unit tests against older versions

Compare
* Compare against PSound
! Compare ffmpeg ycbcr->rgb to PSX ycbcr->rgb
* Compare against XA audio converter http://www.romhacking.net/utilities/894/
* Castlevania seems to have movies with lots of extra frames at the end?
* Compare Tim against various tools out there

Redesign
* Combine VideoSaver and VideoSavers
* Cleanup Main (again)
    ? new parsx lib: String sFile = parser.getStringParam("-f");
    * Add cmdline 1 arg -> start gui and open idx or img
! Finish full .iki handling (UmJammer Lammy .ik2) by detecting variable frame rates
  make them 75 or 150 fps - by checking how much variance there is between frame lengths
* Log when frame rate detection fails
* Bug: Using start and end frames to calculate anything may not work if frame numbering skips
* Change current fps fallback calc to actually count the frames
* Remove need for frame numbers, and Dredd prebuilt index
* Just store the frame start sectors for Dredd
? Make Dredd indexer and Dredd Disc item that subclasses DiscItemVideoStream
* Command-line selection of parallel audio?
* change xa playback to properly handle static (adjacent sector) streaming
* Bug: Ubuntu: only tree column is white, but text boxes have gray background
* Figure out how to better organize all the RGB and YCbCr pixel formats
* Add -psxfps
// Add bicubic and lanczos chroma upsampling interpolation
    // Change video saving settings to include interpolation option
    // Recompare ffmpeg and jPSXdec
    ? Even when not upsampling, utilize it for PsxYuv->JpgYuv matrix conversion
        ! Test how much difference there is between the two color sets
! Add tooltips for everything
? Try to automate the release process
? When displaying progress, setup a timer to only update the display at most every second
? Index doesn't indicate generic type
? More robust contextual CD sector detection
? Add option to save just 1 item allowing to specify name and location
? Is there a better Saving dialog design?


User test feedback
? Ignore completely transparent paletted Tims
* Saving dialog title weird
* Exit program button/menu
* [Save] button not really associated with selection
* More clearly associate list with right panel
// Fix apply to all Tim
// Sees disc items as "files"
// Bug: FPS not grayed in some cases
// "Tim" -> "Image"
// Fix "Saved as" for video saving
// Surprised when started analyzing after opening image
// Make it clearer on googlecode page that project moved
.....................

Indexing
    ? More static data handling
        / Searching for static MDEC data
        ? Searching for static bitstream data
        x Finding and uncompressing lhz data, often used in PSX games
    ? STR indexing: add serialized value: Precise fps:Y/N. When there's no rate variance, then it can be used for -psxfps
    * ISO indexer keeps a bit array of all sectors in the CD and flags them as mode 1/2.
      When creating the DiscItemISO9660Files, it checks if the file contains mode 2 sectors
    ? Visually populate a list as the disc/file is being indexed
    ? Add list box when indexing that will show the items as they are discovered
    ? Add in a comment what sector types were found during indexing (for debugging)
! Video encoder
    ! Finish .iki encoder
        1. Encode STRv2,v3 full
        2. Encode STRv2,v3 partial
        3. Encode Lain full
        4. Encode Lain partial
        5. Encode iki full -> investigate how existing movies know what blocks have higher qscale
        6. Encode iki partial
        Remove ParsedMdecImage
    * remove/merge redundant MDEC codes with AC=0 (FF7)
    * add handling when partial replace detects the entire frame is different
    * Split up the partial diff detection from the actual replacing. Helpful for
        . Generating an xml with frames without changes removed
        . GUI preview would be useful to expose this info
    ? add built-in sub-title rendering (ala Jubler)
    ? create movies from scratch
    ? Include Cb/Cr un-swap correction option
      so videos decoded with other programs can be re-encoded with consistent coloring
    x Alternatively create an mpeg2 parser and converter
    x Add frame (quantization) format descriptors to compare for compatability, print details, and use for encoder
    x Fancy encoding algorithms
        x Smart chrominance sub-sampling calculation
        x Pre-anti-aliasing and Pre-blockiness reduction
        x Temporal spreading (diffusion?) of quantization error
        x Shorter VLC substitution searching
        x Trellis quantization
        x Context-adaptive variable-length coding (or is this h.264 only?)
* Real-time media playback/preview
    * OpenJDK Ubuntu video playback doesn't process frames
    * Add PlayingState.AT_END
    * Bug: Player doesn't let you play movie with 1 frame
    ! Bug: Audio that starts way before, ends way after, or has long breaks is not handled by player
    * Bug: Player automatically plays video-only content when it is very short
    * Bug: video player repeats prior frames and audio when frame type is not detected
    * Pause video-only playback when reading is delayed
    ! Bug: end of playing race condition locks gui
    * Bug: when audio doesn't start for a prolonged period, video frame queue fills and blocks
    * Skip audio in the rare case it is behind sector reading
        - Need to address static (sequential sector) audio
    * Change VideoPlayer into PlayerCanvas that also holds the progress bar and control buttons
    * Add choosing of video scaling interpolation option to api
    * Add choosing of aspect ratio to api
    * [CL] Add command-line options to pick zooming, interpolation, and aspect ratio
    ? Fix it on Linux (Ubuntu) somehow
        x Figure out how to make Linux multithreading not suck
        x Implement my own low-latency audio position tracking
    ? change to use Java 2D
    x Add seeking
    x Register listeners with the SourceDataLine and let those events pause the
      other components indirectly
? Replicate exact PSX color conversion
    * Reverse engineer IDCT
        Create test movies with -0.5 identity IDCT
            Place single values at various locations in the matrix
            Place two values at various locations in the matrix
    * Reverse engineer YCbCr->RGB
        Create test movies with -0.5 identity IDCT that generate predictable DC coefficients
            // Convert newLISP script to Java and combine with FF9 experiment class
            Add remaining Cb and Cr values
            // Figure out why Y comes out so strange

// Update copyright year script
// Remove doxygen
// Cleanup STRv3
// Clarify that Rec601YCbCrImage class is also used for full range ycbcr
// Verify Crusader audio rate http://www.razyboard.com/system/morethread-scrambled-sound-pete_bernert-41713-427403-0.html
// Clean up creating directory tree for saving
// Add Uninstall wiki page
// Pull Main.version -> Version
// Bug: slow scrolling when treetable has hundreds of items (Windows)
    // Change Treetable library
// Add jpsxdec id to AVI such that K-Lite Media Info displays it
// Bug: Save dialog overwrite prompt doesn't consider auto extention
// Rotate pdf visualization
// Remove non-existent files from dropdowns
// Add handling for "Unnamed" file names colliding with disc file names
// Show output file(s) in TIM panel
// Optimize index file loader
    // Clean up tree hierarchy building code
    // Bug: audio streams are still being shared by multiple video streams somehow
// Cleanup the whole ConsoleProgressListenerLogger mess
    // save.log not including headers
// Change time display 1 min 1 sec -> 1:01
// Make Chroma Upsampling be Nearest Neighbor when quality is Fastest
// Prompt to save index from dropdown
// Warn if loading index child was rejected
// Tim put static methods in Tim, MakeTim -> private CreateTim
// Don't strip original file extension when saving
    // Bug: Lemmings 3D ANIMATO/ANIMATO.* videos saved with same name, overwrites itself
// Hi quality Tim 16bpp->24bpp
// XA check sound parameters during decoding, log errors, and pick most reliable values
    // Fix XA log warnings not having any context
        x callback
        x message buffer
        // pass context
            x using logging subheader
            // pass it in
    // XA decoding is outta wack
// Implement my own logger framework
// Bug: 4bit tim saved as bmp appears stretched with interleaved black lines - since at least 0.96
// Bug: GUI doesn't close old files after opening new ones
// Fix vid duration display in DDR
// Change everything to just: video, audio, image
// Finish XA copy
// Mode 1 sector handling
    // Figure out what's wrong with DDR
// Improve manual
// Bug: Save Log files not printing source disc image from cmdline
// Bug: Play tab remains enabled after opening or something
// Retest all PSX games
// Start Lain process
    // Encoding redesign
    x AVI parsing

? https://code.google.com/p/xfiledialog/
? Update manual to cover game ripping
? Indexing overhaul:
  Remove all traces of random access and only assume forward access
  Introduce contextual information to help identify sector types
    CD audio sectors will benefit
    Identifying video sectors by combining the frame data along the way and checking if its valid (FF7, Lain, Dredd)
? Change the way video items split audio items: do it after indexing.
  It's conceptually better, and removes Audio indexer from having to know about video frames.
  However, different movie types split movies slightly differently
  And right now its the sectors that are the only game specific logic
  I would need to add game specific indexers
? Wield the power of Java: Multi-thread decoding (essentially use the player model)
? Create my own smaller/simpler arg parser
? Replace much of IO and some of Misc with Apache Commons IO
? Highlight tree items that are checked for saving
? Change sector reading to start by only reading the header, then read remaining as needed
? Add hex viewer for files
? Visualize disc items location in the gui
? Add CD audio detection/extraction
    ? Add CUE/TOC file parsing so the tracks can be identified
? add DiscItemVideo.decodeFrame(int) for quick thumbnailing
? Finish function "identifySector()" in DiscItem
  to more quickly figure out what type of sectors are read (since it won't
  have to go through the whole list of like 10 types).
? Change package structure to <hosting site>.jpsxdec.*

x Add doxygen to build.xml
    x Make doxygen config
x Bug: Tree music icon is hard to see on blue background

------------------------------------------

? Find new host
    Requirements:
        * free
        ? simple issue tracking (anon bug reports a plus)
        * project name in url
        * clean & simple homepage not focused on the code but on summary and downloads
        * native SVN support (not bridges)
        * 5 or more developers allowed on the project
        * syntax highlighted repo browsing
        * allows non OSI licenses
    http://www.svnhostingcomparison.com/
    ? assembla.com (# of users?, reasonably clean, wiki for a home page, add/remove tabs, bugs called 'tickets') e.g. http://www.assembla.com/spaces/burro
    ? javaforge.com (cluttered) e.g. http://javaforge.com/project/dock
    ? sharesource.org (# of users?, very simple, bug reporting without register, no code highlighting)
    ? activestate.com/firefly/plans (where are the downloads?, # of users?, url is firefly.activestate.com/username/projectname) e.g. http://firefly.activestate.com/ahamino/mindreader  http://firefly.activestate.com/dafi/morekomodo
    ? projectlocker.com (5 users, lots of q's to signup, unable to find a project page on site, has ads)
    ? myversioncontrol.com (3 users, unable to find a project page on site)
    ? bountysource.com
    x Freepository (1 user, svn ok, license ok, no issue tracking)
    x java.net (cluttered) e.g. https://jinput.dev.java.net/
    x codespaces.com (2 users, unable to find a project page on site)
    x xp-dev (project name not in url, no repo browsing)
    x codeplex (best interface, but svn please)
    x googlecode (incompatible license)
    x github (svn please)
    x bitbucket (svn please)
    x launchpad (svn please)

New code style:
    fields only preceeded with underscore '_'
    object no longer have prefix of 'o'
    don't have filename in comment before package name
    arrays of objects will still be 'ao' prefix
    primitive type objects will also still be 'io', 'blno', 'dblo' etc
    nested non-static class fields start with double underscore '__'
    core types prefixes: long=lng int=i short=si byte=b
                         double=dbl float=flt boolean=bln enum=e
    array prefix: a<type> (e.g. int[] = ai)
    arrays always declared type[] name;


